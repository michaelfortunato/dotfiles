#!/bin/bash
# e2be01a7-3011-4aa1-872d-7a40a818127a

# -e stops on errors
# -u catches unset variables
# -o pipefile: pipe errors lead to errors in this shell
set -euo pipefail

GIST_DIR=$HOME/notes/gist

function edit_gist() {
  GIST_FILEPATH=$GIST_DIR/${1}.typ
  if [[ ! -e $GIST_FILEPATH ]]; then
    echo "Could not open gist $1, file $GIST_FILEPATH, does not exist."
    return 1
  fi
  cd $GIST_DIR
  $EDITOR "$(basename $GIST_FILEPATH)"
}

function new_gist() {
  GIST_DEFAULT_NAME="$(date "+%Y-%m-%d" | tr -d '\n')"
  if [[ $# -gt 0 ]]; then
    GIST_NAME=$1
  else
    GIST_NAME=$GIST_DEFAULT_NAME
  fi
  GIST_FILEPATH=$GIST_DIR/${GIST_NAME}.typ
  # Find first available GIST_DIR/GIST_FILENAME-<count>.md
  count=0
  while [[ -f $GIST_FILEPATH ]]; do
    ((++count))
    if [[ $count -gt 1 ]]; then
      GIST_FILEPATH="$(dirname $GIST_FILEPATH)/$(basename $GIST_FILEPATH ".$(expr $count - 1).typ").$count.typ"
    else
      GIST_FILEPATH="$(dirname $GIST_FILEPATH)/$(basename $GIST_FILEPATH '.typ').$count.typ"
    fi
  done

  mkdir -p $GIST_DIR
  cat >$GIST_FILEPATH <<EOF
  #import @local/mnf-typst
EOF
  cd $GIST_DIR
  $EDITOR "$(basename $GIST_FILEPATH)"
}

if [[ $# -gt 0 ]]; then
  if [[ -e ${GIST_DIR}/${1} ]]; then
    cd $GIST_DIR
    $EDITOR ${GIST_DIR}/${1}
  elif [[ -e ${GIST_DIR}/${1}.md ]]; then
    cd $GIST_DIR
    $EDITOR ${GIST_DIR}/${1}.md
  else
    new_gist $1
  fi
else
  new_gist
fi
