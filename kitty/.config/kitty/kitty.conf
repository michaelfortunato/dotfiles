# See here: https://sw.kovidgoyal.net/kitty/conf/#sample-kitty-conf
#   use this to generate kitty.conf
#   kitty +runpy 'from kitty.config import *; print(commented_out_default_config())'
font_family MesloLGS NF
cursor_shape block
#Keep the cursor a block
shell_integration enabled no-cursor 
# Don't warn me
confirm_os_window_close 0


# * Newer integrations *
map ctrl+; kitten toggle_term.py
map ctrl+/ kitten toggle_term.py
## Hate the bell
enable_audio_bell no
map kitty_mod+backspace close_window 
map kitty_mod+space toggle_layout stack
map ctrl+` toggle_layout stack
tab_bar_style powerline
tab_powerline_style slanted
enabled_layouts Tall,*

# Search kitty keyboard shortcuts
# Credit goes here: https://github.com/kovidgoyal/kitty/issues/2164#issuecomment-2566950824
map kitty_mod+/ kitten keymap.py

map ctrl+shift+enter launch --cwd=current
map cmd+enter launch --cwd=current


# ** NVIM KITTY INTEGRATION **
# See here: https://github.com/mrjones2014/smart-splits.nvim?tab=readme-ov-file
map ctrl+j neighboring_window down
map ctrl+k neighboring_window up
map ctrl+h neighboring_window left
map ctrl+l neighboring_window right

# Unset the mapping to pass the keys to neovim
map --when-focus-on var:IS_NVIM ctrl+j
map --when-focus-on var:IS_NVIM ctrl+k
map --when-focus-on var:IS_NVIM ctrl+h
map --when-focus-on var:IS_NVIM ctrl+l

# the 3 here is the resize amount, adjust as needed
# map alt+j kitten relative_resize.py down  3
# map alt+k kitten relative_resize.py up    3
# map alt+h kitten relative_resize.py left  3
# map alt+l kitten relative_resize.py right 3
#
# map --when-focus-on var:IS_NVIM alt+j
# map --when-focus-on var:IS_NVIM alt+k
# map --when-focus-on var:IS_NVIM alt+h
# map --when-focus-on var:IS_NVIM alt+l

# For linux only:
allow_remote_control yes
listen_on unix:@mykitty

# Other unix systems:
allow_remote_control yes
listen_on unix:/tmp/mykitty
