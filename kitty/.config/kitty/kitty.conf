# See here: https://sw.kovidgoyal.net/kitty/conf/#sample-kitty-conf
#   use this to generate kitty.conf
#   kitty +runpy 'from kitty.config import *; print(commented_out_default_config())'
# https://github.com/folke/dot/blob/master/config/kitty/kitty.conf
# # Fonts
# font_family Fira Code Mono
# bold_font Fira Code Bold
# italic_font Maple Mono Italic
# bold_italic_font Maple Mono BoldItalic
# # font_family      Cascadia Mono
# # bold_font        Cascadia Mono Bold
# font_size 10.0
# # modify_font cell_width 90%
# # adjust_column_width -0.5
# symbol_map U+23FB-U+23FE,U+2665,U+26A1,U+2B58,U+E000-U+E00A,U+E0A0-U+E0A3,U+E0B0-U+E0C8,U+E0CA,U+E0CC-U+E0D2,U+E0D4,U+E200-U+E2A9,U+E300-U+E3E3,U+E5FA-U+E634,U+E700-U+E7C5,U+EA60-U+EBEB,U+F000-U+F2E0,U+F300-U+F32F,U+F400-U+F4A9,U+F500-U+F8FF Symbols Nerd Font Mono
# disable_ligatures cursor
# Fonts
font_family MesloLGS NF
cursor_shape block
#Keep the cursor a block
shell_integration enabled no-cursor 
# Don't warn me
confirm_os_window_close 0


# * Newer integrations *
## NOTE: ctrl+/ overrides lazyvim, which is what I want
map ctrl+/ kitten toggle_term.py
# TODO: (MNF-7000) Not confident yet map --when-focus-on var:IS_NVIM ctrl+/
#--orientation=horizontal
#--type=overlay
## Hate the bell
enable_audio_bell no
map kitty_mod+space toggle_layout stack
# NOTE: Unnecessary map ctrl+` toggle_layout stack
tab_bar_style powerline
tab_powerline_style slanted
#tab_bar_style hidden
enabled_layouts Fat,Tall,*

# Search kitty keyboard shortcuts
# Credit goes here: https://github.com/kovidgoyal/kitty/issues/2164#issuecomment-2566950824
map kitty_mod+/ kitten keymap.py

map ctrl+shift+enter launch --cwd=current
map cmd+enter launch --cwd=current


# ** NVIM KITTY INTEGRATION **
# See here: https://github.com/mrjones2014/smart-splits.nvim?tab=readme-ov-file
map ctrl+j neighboring_window down
map ctrl+k neighboring_window up
map ctrl+h neighboring_window left
map ctrl+l neighboring_window right

# Unset the mapping to pass the keys to neovim
map --when-focus-on var:IS_NVIM ctrl+j
map --when-focus-on var:IS_NVIM ctrl+k
map --when-focus-on var:IS_NVIM ctrl+h
map --when-focus-on var:IS_NVIM ctrl+l

# the 3 here is the resize amount, adjust as needed
# map alt+j kitten relative_resize.py down  3
# map alt+k kitten relative_resize.py up    3
# map alt+h kitten relative_resize.py left  3
# map alt+l kitten relative_resize.py right 3
#
# map --when-focus-on var:IS_NVIM alt+j
# map --when-focus-on var:IS_NVIM alt+k
# map --when-focus-on var:IS_NVIM alt+h
# map --when-focus-on var:IS_NVIM alt+l

# For linux only:
allow_remote_control yes
listen_on unix:@mykitty

# Other unix systems:
allow_remote_control yes
listen_on unix:/tmp/mykitty


map ctrl+1 goto_tab 1
map ctrl+2 goto_tab 2
map ctrl+3 goto_tab 3
map ctrl+4 goto_tab 4
map ctrl+5 goto_tab 5
map ctrl+t new_tab
map ctrl+w close_tab

# Unset the mapping to pass the keys to neovim
map --when-focus-on var:IS_NVIM ctrl+1
map --when-focus-on var:IS_NVIM ctrl+2
map --when-focus-on var:IS_NVIM ctrl+3
map --when-focus-on var:IS_NVIM ctrl+4
map --when-focus-on var:IS_NVIM ctrl+5
